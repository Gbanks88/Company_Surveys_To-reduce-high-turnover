{
  "projects": [
    {
      "url": "https://github.com/microsoft/BotBuilder-Samples/tree/main/samples/python/02.echo-bot",
      "title": "BotBuilder-Samples/samples/python/02.echo-bot at main \u00b7 microsoft/BotBuilder-Samples \u00b7 GitHub",
      "requirements": [
        "echo-bot folder\nActivate your desired virtual environment\nIn the terminal, type pip install -r requirements"
      ],
      "duration_months": null,
      "scraped_at": "2025-02-20T22:33:41.475000",
      "success_indicators": [
        "Deploy the bot to Azure\nTo learn more about deploying a bot to Azure, see Deploy your bot to Azure for a complete list of deployment instructions"
      ]
    },
    {
      "url": "https://github.com/microsoft/BotBuilder-Samples/tree/main/samples/python/13.core-bot",
      "title": "BotBuilder-Samples/samples/python/13.core-bot at main \u00b7 microsoft/BotBuilder-Samples \u00b7 GitHub",
      "requirements": [
        "Implement a multi-turn conversation using Dialogs",
        "prerequisites in order to run.",
        "This sample requires prerequisites in order to run.",
        "This bot has been created using Bot Framework, it shows how to:\n\nUse LUIS to implement core AI capabilities\nImplement a multi-turn conversation using Dialogs\nHandle user interruptions for such things as Help or Cancel\nPrompt for and validate requests for information from the user\n\nPrerequisites\nThis sample requires prerequisites in order to run",
        "core-bot folder\nActivate your desired virtual environment\nIn the terminal, type pip install -r requirements"
      ],
      "duration_months": null,
      "scraped_at": "2025-02-20T22:33:41.580700",
      "success_indicators": [
        "Implement a multi-turn conversation using Dialogs",
        "Install the latest Bot Framework Emulator from here\n\nConnect to the bot using Bot Framework Emulator\n\nLaunch Bot Framework Emulator\nFile -> Open Bot\nEnter a Bot URL of http://localhost:3978/api/messages\n\nDeploy the bot to Azure\nTo learn more about deploying a bot to Azure, see Deploy your bot to Azure for a complete list of deployment instructions"
      ]
    },
    {
      "url": "https://github.com/microsoft/BotBuilder-Samples/tree/main/samples/python/45.state-management",
      "title": "BotBuilder-Samples/samples/python/45.state-management at main \u00b7 microsoft/BotBuilder-Samples \u00b7 GitHub",
      "requirements": [
        "Depending on what your bot is used for, you may even need to keep track of state or store information for longer than the lifetime of the conversation",
        "state-management folder\nActivate your desired virtual environment\nIn the terminal, type pip install -r requirements"
      ],
      "duration_months": null,
      "scraped_at": "2025-02-20T22:33:41.297701",
      "success_indicators": [
        "Deploy the bot to Azure\nTo learn more about deploying a bot to Azure, see Deploy your bot to Azure for a complete list of deployment instructions"
      ]
    },
    {
      "url": "https://github.com/microsoft/BotBuilder-Samples/tree/main/samples/python/16.proactive-messages",
      "title": "BotBuilder-Samples/samples/python/16.proactive-messages at main \u00b7 microsoft/BotBuilder-Samples \u00b7 GitHub",
      "requirements": [
        "In some cases, a bot may need to send the user a message that is not directly related to the current topic of conversation",
        "Or, if a bot requires some time to compile a response to the user's question, it may inform the user of the delay and allow the conversation to continue in the meantime",
        "proactive-messages folder\nActivate your desired virtual environment\nIn the terminal, type pip install -r requirements",
        "first capture a conversation reference from an incoming message using TurnContext.getConversationReference(). This reference can be stored for later use.",
        "If a bot sets a timer or reminder, it will need to notify the user when the time arrives",
        "In order to send a proactive message using Bot Framework, the bot must first capture a conversation reference from an incoming message using TurnContext",
        "Or, if a bot receives a notification from an external system, it may need to communicate that information to the user immediately"
      ],
      "duration_months": null,
      "scraped_at": "2025-02-20T22:33:41.508531",
      "success_indicators": [
        "Deploy this bot to Azure\nTo learn more about deploying a bot to Azure, see Deploy your bot to Azure for a complete list of deployment instructions"
      ]
    },
    {
      "url": "https://github.com/microsoft/BotBuilder-Samples/tree/main/samples/python/44.prompt-for-user-input",
      "title": "BotBuilder-Samples/samples/python/44.prompt-for-user-input at main \u00b7 microsoft/BotBuilder-Samples \u00b7 GitHub",
      "requirements": [
        "prompt-for-user-input folder\nActivate your desired virtual environment\nIn the terminal, type pip install -r requirements"
      ],
      "duration_months": null,
      "scraped_at": "2025-02-20T22:33:41.210168",
      "success_indicators": [
        "Install the latest Bot Framework Emulator from here\n\nConnect to the bot using Bot Framework Emulator\n\nLaunch Bot Framework Emulator\nFile -> Open Bot\nEnter a Bot URL of http://localhost:3978/api/messages\n\nDeploy the bot to Azure\nTo learn more about deploying a bot to Azure, see Deploy your bot to Azure for a complete list of deployment instructions"
      ]
    },
    {
      "url": "https://github.com/microsoft/BotBuilder-Samples/tree/main/samples/python/24.bot-authentication-msgraph",
      "title": "BotBuilder-Samples/samples/python/24.bot-authentication-msgraph at main \u00b7 microsoft/BotBuilder-Samples \u00b7 GitHub",
      "requirements": [
        "to make it easier to develop a bot that",
        "use or verify the user has a valid token at any point the OAuth prompt may be sent. If the token is not valid they will be prompted to login.",
        "It is important to note that the user's token does not need to be stored in the bot",
        "When the bot needs to use or verify the user has a valid token at any point the OAuth prompt may be sent",
        "of Azure Bot Service, providing features to make it easier to develop a bot that",
        "py with required configuration settings\n\nMicrosoftAppId\nMicrosoftAppPassword\nConnectionName\n\n\nActivate your desired virtual environment\nIn the terminal, type pip install -r requirements",
        "of Azure Bot Service. In this sample we are assuming the OAuth 2 provider is Azure Active Directory v2 (AADv2) and are utilizing the Microsoft Graph API to retrieve data about the user. Check here for information about getting an AADv2",
        "to use or verify the user has a valid token at any point the OAuth prompt may be sent. If the token is not valid they will be prompted to login."
      ],
      "duration_months": null,
      "scraped_at": "2025-02-20T22:33:41.821566",
      "success_indicators": [
        "These updates also\ntake steps towards an improved user experience by eliminating the magic code verification for some clients and channels",
        "of Azure Bot Service, providing features to make it easier to develop a bot that",
        "user experience by eliminating the magic code verification for some clients and channels.",
        "Deploy the bot to Azure\nTo learn more about deploying a bot to Azure, see Deploy your bot to Azure for a complete list of deployment instructions",
        "of Azure Bot Service. In this sample we are assuming the OAuth 2 provider is Azure Active Directory v2 (AADv2) and are utilizing the Microsoft Graph API to retrieve data about the user. Check here for information about getting an AADv2"
      ]
    }
  ],
  "summary": {
    "total_projects": 6,
    "avg_duration_months": null,
    "avg_requirements": 4.0,
    "requirements_by_category": {
      "setup": [
        "echo-bot folder\nActivate your desired virtual environment\nIn the terminal, type pip install -r requirements",
        "prerequisites in order to run.",
        "This sample requires prerequisites in order to run.",
        "This bot has been created using Bot Framework, it shows how to:\n\nUse LUIS to implement core AI capabilities\nImplement a multi-turn conversation using Dialogs\nHandle user interruptions for such things as Help or Cancel\nPrompt for and validate requests for information from the user\n\nPrerequisites\nThis sample requires prerequisites in order to run",
        "core-bot folder\nActivate your desired virtual environment\nIn the terminal, type pip install -r requirements",
        "state-management folder\nActivate your desired virtual environment\nIn the terminal, type pip install -r requirements",
        "proactive-messages folder\nActivate your desired virtual environment\nIn the terminal, type pip install -r requirements",
        "prompt-for-user-input folder\nActivate your desired virtual environment\nIn the terminal, type pip install -r requirements",
        "py with required configuration settings\n\nMicrosoftAppId\nMicrosoftAppPassword\nConnectionName\n\n\nActivate your desired virtual environment\nIn the terminal, type pip install -r requirements"
      ],
      "core_features": [
        "Depending on what your bot is used for, you may even need to keep track of state or store information for longer than the lifetime of the conversation",
        "first capture a conversation reference from an incoming message using TurnContext.getConversationReference(). This reference can be stored for later use.",
        "In order to send a proactive message using Bot Framework, the bot must first capture a conversation reference from an incoming message using TurnContext"
      ],
      "advanced_features": [],
      "integration": [
        "Or, if a bot receives a notification from an external system, it may need to communicate that information to the user immediately",
        "of Azure Bot Service, providing features to make it easier to develop a bot that",
        "of Azure Bot Service. In this sample we are assuming the OAuth 2 provider is Azure Active Directory v2 (AADv2) and are utilizing the Microsoft Graph API to retrieve data about the user. Check here for information about getting an AADv2"
      ],
      "security": [
        "use or verify the user has a valid token at any point the OAuth prompt may be sent. If the token is not valid they will be prompted to login.",
        "It is important to note that the user's token does not need to be stored in the bot",
        "When the bot needs to use or verify the user has a valid token at any point the OAuth prompt may be sent",
        "to use or verify the user has a valid token at any point the OAuth prompt may be sent. If the token is not valid they will be prompted to login."
      ],
      "performance": [],
      "user_experience": [
        "In some cases, a bot may need to send the user a message that is not directly related to the current topic of conversation",
        "Or, if a bot requires some time to compile a response to the user's question, it may inform the user of the delay and allow the conversation to continue in the meantime",
        "If a bot sets a timer or reminder, it will need to notify the user when the time arrives"
      ],
      "development": [
        "Implement a multi-turn conversation using Dialogs",
        "to make it easier to develop a bot that"
      ]
    },
    "common_requirements": [
      "When the bot needs to use or verify the user has a valid token at any point the OAuth prompt may be sent",
      "of Azure Bot Service, providing features to make it easier to develop a bot that",
      "proactive-messages folder\nActivate your desired virtual environment\nIn the terminal, type pip install -r requirements",
      "This sample requires prerequisites in order to run.",
      "This bot has been created using Bot Framework, it shows how to:\n\nUse LUIS to implement core AI capabilities\nImplement a multi-turn conversation using Dialogs\nHandle user interruptions for such things as Help or Cancel\nPrompt for and validate requests for information from the user\n\nPrerequisites\nThis sample requires prerequisites in order to run",
      "state-management folder\nActivate your desired virtual environment\nIn the terminal, type pip install -r requirements",
      "If a bot sets a timer or reminder, it will need to notify the user when the time arrives",
      "py with required configuration settings\n\nMicrosoftAppId\nMicrosoftAppPassword\nConnectionName\n\n\nActivate your desired virtual environment\nIn the terminal, type pip install -r requirements",
      "It is important to note that the user's token does not need to be stored in the bot",
      "Or, if a bot requires some time to compile a response to the user's question, it may inform the user of the delay and allow the conversation to continue in the meantime",
      "echo-bot folder\nActivate your desired virtual environment\nIn the terminal, type pip install -r requirements",
      "Or, if a bot receives a notification from an external system, it may need to communicate that information to the user immediately",
      "of Azure Bot Service. In this sample we are assuming the OAuth 2 provider is Azure Active Directory v2 (AADv2) and are utilizing the Microsoft Graph API to retrieve data about the user. Check here for information about getting an AADv2",
      "to use or verify the user has a valid token at any point the OAuth prompt may be sent. If the token is not valid they will be prompted to login.",
      "Implement a multi-turn conversation using Dialogs",
      "to make it easier to develop a bot that",
      "In some cases, a bot may need to send the user a message that is not directly related to the current topic of conversation",
      "use or verify the user has a valid token at any point the OAuth prompt may be sent. If the token is not valid they will be prompted to login.",
      "Depending on what your bot is used for, you may even need to keep track of state or store information for longer than the lifetime of the conversation",
      "prompt-for-user-input folder\nActivate your desired virtual environment\nIn the terminal, type pip install -r requirements",
      "In order to send a proactive message using Bot Framework, the bot must first capture a conversation reference from an incoming message using TurnContext",
      "core-bot folder\nActivate your desired virtual environment\nIn the terminal, type pip install -r requirements",
      "prerequisites in order to run.",
      "first capture a conversation reference from an incoming message using TurnContext.getConversationReference(). This reference can be stored for later use."
    ],
    "success_patterns": {
      "Deploy the bot to Azure\nTo learn more about deploying a bot to Azure, see Deploy your bot to Azure for a complete list of deployment instructions": 3,
      "Implement a multi-turn conversation using Dialogs": 1,
      "Install the latest Bot Framework Emulator from here\n\nConnect to the bot using Bot Framework Emulator\n\nLaunch Bot Framework Emulator\nFile -> Open Bot\nEnter a Bot URL of http://localhost:3978/api/messages\n\nDeploy the bot to Azure\nTo learn more about deploying a bot to Azure, see Deploy your bot to Azure for a complete list of deployment instructions": 2,
      "Deploy this bot to Azure\nTo learn more about deploying a bot to Azure, see Deploy your bot to Azure for a complete list of deployment instructions": 1,
      "These updates also\ntake steps towards an improved user experience by eliminating the magic code verification for some clients and channels": 1,
      "of Azure Bot Service, providing features to make it easier to develop a bot that": 1,
      "user experience by eliminating the magic code verification for some clients and channels.": 1,
      "of Azure Bot Service. In this sample we are assuming the OAuth 2 provider is Azure Active Directory v2 (AADv2) and are utilizing the Microsoft Graph API to retrieve data about the user. Check here for information about getting an AADv2": 1
    }
  }
}